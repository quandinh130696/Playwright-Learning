name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run test

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/

      - name: Generate test summary
        if: always()
        run: node scripts/summary.js

      - name: Create summary short + base64 outputs
        id: gen_outputs
        if: always()
        run: |
          # ensure file exists
          if [ ! -f summary.txt ]; then
            echo "⚠️ No summary file found" > summary.txt
          fi

          # normalize line endings (remove CR)
          tr -d '\r' < summary.txt > summary_unix.txt && mv summary_unix.txt summary.txt

          # extract numbers for a one-line short summary
          passed=$(grep -oP 'Passed:\s*\K[0-9]+' summary.txt || echo 0)
          failed=$(grep -oP 'Failed:\s*\K[0-9]+' summary.txt || echo 0)
          skipped=$(grep -oP 'Skipped:\s*\K[0-9]+' summary.txt || echo 0)
          total=$(grep -oP 'Total:\s*\K[0-9]+' summary.txt || echo 0)
          duration=$(grep -oP 'Duration:\s*\K[0-9]+(?:\.[0-9]+)?s' summary.txt || echo "0s")

          # short summary
          short="📊 Test Summary:\n✅ Passed: ${passed}\n❌ Failed: ${failed}\n⚠️ Skipped: ${skipped}\n📦 Total: ${total}\n⏱ Duration: ${duration}"

          # base64 encode the full summary
          summary_b64=$(base64 -w0 summary.txt)

          # write outputs for later steps
          echo "summary_short=${short}" >> $GITHUB_OUTPUT
          echo "summary_b64=${summary_b64}" >> $GITHUB_OUTPUT

      - name: Decode summary for email attachment
        if: always()
        run: |
          if [ -n "${{ steps.gen_outputs.outputs.summary_b64 }}" ]; then
            echo "${{ steps.gen_outputs.outputs.summary_b64 }}" | base64 -d > summary_decoded.txt || echo "Decode failed" > summary_decoded.txt
          else
            echo "No summary content" > summary_decoded.txt
          fi

      - name: Compress Playwright report
        if: always()
        run: zip -r playwright-report.zip playwright-report

      - name: Deploy HTML report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: playwright-report
          enable_jekyll: false

      - name: Send test report via email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "📊 Playwright Report - ${{ github.repository }} #${{ github.run_number }}"
          to: quandinhdinh130696@gmail.com
          from: ${{ secrets.EMAIL_USER }}
          body: |
            Hello 👋,

            The Playwright test run for **${{ github.repository }}**
            (branch: ${{ github.ref_name }}) has completed.

            Here is the summary:
            ${{ steps.gen_outputs.outputs.summary_short }}

            🔗 Full HTML report:
            https://quandinh130696.github.io/Playwright-Learning/
